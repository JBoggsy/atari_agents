# Create get-from-vsm node
sp {agent_1*propose*make-get-from-vsm-vop
   (state <s> ^name agent_1
              ^svs.vsm.vog <vog>)
 -{(<vog> ^node <n>)
   (<n> ^op-name get-from-vsm)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-get-from-vsm-vop)
}

sp {apply*make-get-from-vsm-vop
   (state <s> ^operator <op>
              ^svs.command <cmd>)
   (<op> ^name make-get-from-vsm-vop)
-->
   (<cmd> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type get-from-vsm)
}


# Create load-from-file node
sp {agent_1*propose*make-load-from-file-vop
   (state <s> ^name agent_1
              ^svs <svs>)
   (<svs> ^vsm.vog <vog>)
 -{(<vog> ^node <n>)
   (<n> ^op-name load-from-file)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-load-from-file-vop)
}

sp {apply*make-load-from-file-vop
   (state <s> ^operator <op>
              ^svs.command <cmd>)
   (<op> ^name make-load-from-file-vop)
-->
   (<cmd> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type load-from-file
              ^filepath |paddle.png|)
}


# Create greyscale nodes
sp {agent_1*propose*make-greyscale-vop
   (state <s> ^name agent_1
              ^svs <svs>)
   (<svs> ^vsm.vog <vog>)
   (<vog> ^node <tgt-node>)
   (<tgt-node> ^op-name << get-from-vsm load-from-file >>
               ^target -1
               ^node-id <node-id>)
 -{(<vog> ^node <new-node>)
   (<new-node> ^op-name greyscale
               ^target <node-id>)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-greyscale-vop
         ^target <node-id>)
}

sp {apply*make-greyscale-vop
   (state <s> ^operator <op>
              ^svs.command <cmd-link>)
   (<op> ^name make-greyscale-vop
         ^target <target-id>)
-->
   (<cmd-link> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type greyscale
              ^target <target-id>)
}

# Create crop-to-roi node
sp {agent_1*propose*make-crop-to-roi-vop
   (state <s> ^name agent_1
              ^svs <svs>)
   (<svs> ^vsm.vog <vog>)
   (<vog> ^node <vsm-grey-node>
          ^node <vsm-node>)
   (<vsm-node> ^op-name get-from-vsm
               ^node-id <vsm-node-id>)
   (<vsm-grey-node> ^op-name greyscale
                    ^target <vsm-node-id>
                    ^node-id <vsm-grey-node-id>)
 -{(<vog> ^node <n>)
   (<n> ^op-name crop-to-roi)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-crop-to-roi-vop
         ^target <vsm-grey-node-id>)
}

sp {apply*make-crop-to-roi-vop
   (state <s> ^operator <op>
              ^svs.command <cmd>)
   (<op> ^name make-crop-to-roi-vop
         ^target <vsm-grey-node-id>)
-->
   (<cmd> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type crop-to-roi
              ^x 8
              ^y 188
              ^width 144
              ^height 8
              ^target <vsm-grey-node-id>)
}

# Create match-template node
sp {agent_1*propose*make-match-template-vop
   (state <s> ^name agent_1
              ^svs <svs>)
   (<svs> ^vsm.vog <vog>)
   (<vog> ^node <roi-node>
          ^node <paddle-node>
          ^node <paddle-grey-node>)
   (<roi-node> ^op-name crop-to-roi
               ^node-id <roi-node-id>)
   (<paddle-node> ^op-name load-from-file
                  ^node-id <paddle-node-id>)
   (<paddle-grey-node> ^op-name greyscale
                       ^target <paddle-node-id>
                       ^node-id <paddle-grey-node-id>)
 -{(<vog> ^node <n>)
   (<n> ^op-name match-template)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-match-template-vop
         ^target <roi-node-id>
         ^template <paddle-grey-node-id>)
}

sp {apply*make-match-template-vop
   (state <s> ^operator <op>
              ^svs.command <cmd>)
   (<op> ^name make-match-template-vop
         ^target <roi-node-id>
         ^template <paddle-grey-node-id>)
-->
   (<cmd> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type match-template
              ^target <roi-node-id>
              ^template <paddle-grey-node-id>
              ^method 4)
}

# Create a min & max finding node
sp {agent_1*propose*make-min-max-vop
   (state <s> ^name agent_1
              ^svs <svs>)
   (<svs> ^vsm.vog <vog>)
   (<vog> ^node <tgt-node>)
   (<tgt-node> ^op-name match-template
               ^node-id <node-id>)
 -{(<vog> ^node <new-node>)
   (<new-node> ^op-name min-max-loc
               ^target <node-id>)}
-->
   (<s> ^operator <op> + =)
   (<op> ^name make-min-max-vop
         ^target <node-id>)
}

sp {apply*make-min-mix-vop
   (state <s> ^operator <op>
              ^svs.command <cmd-link>)
   (<op> ^name make-min-max-vop
         ^target <target-id>)
-->
   (<cmd-link> ^add-vop-node <add-vop>)
   (<add-vop> ^op-type min-max-loc
              ^target <target-id>)
}


# Create display-image node
#sp {agent_1*propose*make-display-image-vop
#   (state <s> ^name agent_1
#              ^svs <svs>)
#   (<svs> ^vsm.vog <vog>)
#   (<vog> ^node <match-node>)
#   (<match-node> ^op-name match-template
#                 ^node-id <match-node-id>)
# -{(<vog> ^node <n>)
#   (<n> ^op-name display-image)}
#-->
#   (<s> ^operator <op> + =)
#   (<op> ^name make-display-image-vop
#         ^target <match-node-id>)
#}
#
#sp {apply*make-display-image-vop
#   (state <s> ^operator <op>
#              ^svs.command <cmd>)
#   (<op> ^name make-display-image-vop
#         ^target <match-node-id>)
#-->
#   (<cmd> ^add-vop-node <add-vop>)
#   (<add-vop> ^op-type display-image
#              ^target <match-node-id>
#              ^window-name |Image Match|)
#}
